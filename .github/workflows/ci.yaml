name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.TEST_DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.TEST_DB_USERNAME }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
      DB_NAME: ${{ secrets.TEST_DB_NAME }}
      RESPONSE_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      JWKS_URI: ${{ secrets.JWKS_URI }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U $DB_USERNAME; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Run migrations
        run: npm run migration:run

      - name: Test and coverage
        run: npm run test

      - name: Build TypeScript
        run: npm run build

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      IMAGE_NAME: mungase/mernspace-c-auth-service
      IMAGE_TAG: build-${{ github.run_number }}
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --platform linux/amd64 -f docker/prod/Dockerfile .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
